CREATE PROCEDURE spMigration_tbl_BCMOrderData
AS
BEGIN

	BEGIN TRANSACTION;
    -- Error handling block
    BEGIN TRY
        -- Insert suppliers if they do not exist
        INSERT INTO SUPPLIERS (SUPPLIER_NAME, SUPP_CONTACT_NAME, SUPPLIER_ADDRESS, SUPP_TELEPHONE_NUMBER, SUPP_MOBILE_NUMBER, SUPPLIER_TOWN_VILLAGE, SUPPLIER_EMAIL)
        SELECT DISTINCT 
            SUPPLIER_NAME, 
            SUPP_CONTACT_NAME, 
            SUPP_ADDRESS,
			(SELECT TOP 1 TRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LOWER(value), ' ', ''), 'S', '5'), 'O', '0'),'.',''),'i','1'))
			 FROM STRING_SPLIT(SUPP_CONTACT_NUMBER, ',') 
			 WHERE LEN(TRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LOWER(value), ' ', ''), 'S', '5'), 'O', '0'),'.',''),'i','1'))) = 7) AS SUPP_TELEPHONE_NUMBER,

			-- Extract first valid mobile number (8 digits, starts with 5)
			(SELECT TOP 1 TRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LOWER(value), ' ', ''), 'S', '5'), 'O', '0'),'.',''),'i','1'))
			 FROM STRING_SPLIT(SUPP_CONTACT_NUMBER, ',') 
			 WHERE LEN(TRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LOWER(value), ' ', ''), 'S', '5'), 'O', '0'),'.',''),'i','1'))) = 8
			       AND TRIM(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LOWER(value), ' ', ''), 'S', '5'), 'O', '0'),'.',''),'i','1')) LIKE '5%') AS SUPP_MOBILE_NUMBER,
			SUPPLIER_TOWN_VILLAGE = 
					(SELECT value 
					 FROM STRING_SPLIT(SUPP_ADDRESS, ',', 1) 
					 ORDER BY ordinal 
					 OFFSET 3 ROWS FETCH NEXT 1 ROWS ONLY),
            SUPP_EMAIL
        FROM BCM_ORDER_MGT tblBCM
        WHERE SUPPLIER_NAME IS NOT NULL AND SUPP_EMAIL IS NOT NULL
		AND NOT EXISTS (
            SELECT 1 FROM SUPPLIERS WHERE SUPPLIER_NAME = tblBCM.SUPPLIER_NAME AND SUPPLIER_EMAIL = tblBCM.SUPP_EMAIL
        );

        -- Insert orders and map them to the existing suppliers
        INSERT INTO ORDERS (ORDER_REF, ORDER_DATE, ORDER_TOTAL_AMOUNT, SUPPLIER_ID)
        SELECT DISTINCT 
			ORDER_REF, 
            PARSE(tblBCM.ORDER_DATE AS date USING 'en-GB') AS ORDER_DATE,
            TRY_CONVERT(DECIMAL(12, 2), REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(ORDER_TOTAL_AMOUNT, 'O', '0'), 'o', '0'), 'S', '5'), 's', '5'), ',', '')),
			tblSupp.SUPPLIER_ID
        FROM BCM_ORDER_MGT tblBCM
        JOIN SUPPLIERS tblSupp 
            ON tblSupp.SUPPLIER_NAME = tblBCM.SUPPLIER_NAME 
            AND tblSupp.SUPPLIER_EMAIL = tblBCM.SUPP_EMAIL
		WHERE NOT EXISTS (
            SELECT 1 FROM ORDERS WHERE ORDER_REF = tblBCM.ORDER_REF
        );

        -- Insert order lines and link to the appropriate order
        INSERT INTO ORDER_LINE (PRODUCT_DESCRIPTION, ORDER_LINE_AMOUNT, ORDER_STATUS, ORDER_REF)
        SELECT 
            ORDER_DESCRIPTION, 
			TRY_CONVERT(DECIMAL(12, 2), REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(ORDER_LINE_AMOUNT, 'O', '0'), 'o', '0'), 'S', '5'), 's', '5'), ',', ''),'l','1'))  AS ORDER_LINE_AMOUNT,
			ORDER_STATUS, 
            ORDER_REF
        FROM BCM_ORDER_MGT tblBCM
		WHERE NOT EXISTS (
            SELECT 1 FROM ORDER_LINE WHERE ORDER_REF = tblBCM.ORDER_REF
        );
        
        -- Insert invoices
        INSERT INTO INVOICE (INVOICE_REF, INVOICE_DATE)
        SELECT DISTINCT
			INVOICE_REFERENCE,
			PARSE(INVOICE_DATE AS date USING 'en-GB') AS INVOICE_DATE
        FROM BCM_ORDER_MGT tblBCM
		WHERE INVOICE_REFERENCE IS NOT NULL
		AND NOT EXISTS (
            SELECT 1 FROM INVOICE WHERE INVOICE_REF = tblBCM.INVOICE_REFERENCE
        );

		--Insert invoice orders and link invoices to order lines
        INSERT INTO INVOICE_ORDERS (INVOICE_REF, INVOICE_ID, ORDER_LINE_ID, INVOICE_STATUS, INVOICE_HOLD_REASON, INVOICE_AMOUNT, INVOICE_DESCRIPTION)
        SELECT DISTINCT
			INVOICE_REFERENCE,
			tblInv.INVOICE_ID,
            tblOrdLine.ORDER_LINE_ID, 
            INVOICE_STATUS, 
            INVOICE_HOLD_REASON, 
			COALESCE(TRY_CONVERT(DECIMAL(12, 2), REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(INVOICE_AMOUNT, 'O', '0'), 'o', '0'), 'S', '5'), 's', '5'), ',', '')), 0.00) AS INVOICE_AMOUNT,
            INVOICE_DESCRIPTION
        FROM BCM_ORDER_MGT tblBCM
		LEFT JOIN ORDER_LINE tblOrdLine ON tblOrdLine.ORDER_REF = tblBCM.ORDER_REF
		LEFT JOIN INVOICE tblInv ON tblInv.INVOICE_REF = tblBCM.INVOICE_REFERENCE
		WHERE INVOICE_REFERENCE IS NOT NULL
		AND NOT EXISTS (
            SELECT 1 FROM INVOICE_ORDERS WHERE INVOICE_REF = tblBCM.INVOICE_REFERENCE AND ORDER_LINE_ID = tblOrdLine.ORDER_LINE_ID
        );
	
		COMMIT;
		PRINT 'Migration Successful';
    END TRY
    BEGIN CATCH
        PRINT 'Error occurred at: ' + ERROR_PROCEDURE() + ' in line ' + CAST(ERROR_LINE() AS VARCHAR(10));
        PRINT 'Error Message: ' + ERROR_MESSAGE();
        PRINT 'Error Severity: ' + CAST(ERROR_SEVERITY() AS VARCHAR(10));
        PRINT 'Error State: ' + CAST(ERROR_STATE() AS VARCHAR(10));
		ROLLBACK;
    END CATCH
END;
